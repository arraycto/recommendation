<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shadowkhan.dao.user.UserMapper">

  <resultMap id="BaseResultMap" type="com.shadowkhan.dao.user.model.User">
    <id column="User_ID" jdbcType="INTEGER" property="userId"/>
    <result column="username" jdbcType="LONGVARCHAR" property="username"/>
    <result column="password" jdbcType="LONGVARCHAR" property="password"/>
    <result column="create_time" jdbcType="BIGINT" property="createTime"/>
    <result column="create_by" jdbcType="LONGVARCHAR" property="createBy"/>
    <result column="lastest_time" jdbcType="BIGINT" property="lastestTime"/>
    <result column="is_deleted" jdbcType="LONGVARCHAR" property="isDeleted"/>
    <result column="deleted_time" jdbcType="BIGINT" property="deletedTime"/>
    <result column="name" jdbcType="LONGVARCHAR" property="name"/>
    <result column="phone" jdbcType="LONGVARCHAR" property="phone"/>
    <result column="email" jdbcType="LONGVARCHAR" property="email"/>
    <result column="rule" jdbcType="LONGVARCHAR" property="rule"/>
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
    <result column="modify_by" jdbcType="LONGVARCHAR" property="modifyBy"/>
  </resultMap>
  <sql id="Entity_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Entity_Where_Clause">
    <where>
      <foreach collection="entity.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `User_ID`, `username`, `password`, `create_time`, `lastest_time`,`create_by`,`is_deleted`,`deleted_time`,`name`, `phone`, `email`,`rule`,`modify_time`,`modify_by`
  </sql>
  <select id="selectByEntity" parameterType="com.shadowkhan.dao.user.model.UserEntity" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByKeys" parameterType="hashmap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where 1=1
    <if test="rule != null">
      and `rule` = #{rule}
    </if>
    and concat(ifnull(`username`,''),ifnull(`name`,''),ifnull(`phone`,''),ifnull(`email`,'')) like concat('%',#{keywords},'%')
  </select>
  <select id="selectAll" parameterType="hashmap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    `user`
    where 1=1
    <if test="rule != null">
      and `rule` = #{rule}
    </if>
    <if test="first != null or second != null">
      limit #{first},#{second}
    </if>
  </select>
  <select id="selectByUsername" parameterType="hashmap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where 1=1
    and `username` = #{username,jdbcType=LONGVARCHAR}
    <if test="isDeleted != null">
      and `is_deleted` = '0'
    </if>
    <if test="rule != null">
      and `rule` = #{rule}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `user`
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `user`
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByEntity" parameterType="com.shadowkhan.dao.user.model.UserEntity">
    delete from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.shadowkhan.dao.user.model.User">
    insert into `user` (
      `User_ID`,
      `username`,
      `password`,
      `create_time`,
      `create_by`,
      `lastest_time`,
      `is_deleted`,
      `deleted_time`,
      `name`,
      `phone`,
      `email`,
      `rule`,
      `modify_time`,
      `modify_by`
    )
    values (
      #{userId,jdbcType=INTEGER},
      #{username,jdbcType=LONGVARCHAR},
      #{password,jdbcType=LONGVARCHAR},
      #{createTime,jdbcType=BIGINT},
      #{createBy,jdbcType=LONGVARCHAR},
      #{lastestTime,jdbcType=BIGINT},
      #{isDeleted,jdbcType=LONGVARCHAR},
      #{deletedTime,jdbcType=BIGINT},
      #{name,jdbcType=LONGVARCHAR},
      #{phone,jdbcType=LONGVARCHAR},
      #{email,jdbcType=LONGVARCHAR},
      #{rule,jdbcType=LONGVARCHAR},
      #{modifyTime,jdbcType=BIGINT},
      #{modifyBy,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.shadowkhan.dao.user.model.User">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        `User_ID`,
      </if>
      <if test="username != null">
        `username`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="createBy != null">
        `create_by`,
      </if>
      <if test="lastestTime != null">
        `lastest_time`,
      </if>
      <if test="isDeleted != null">
        `is_deleted`,
      </if>
      <if test="deletedTime != null">
        `deleted_time`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="phone != null">
        `phone`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="rule != null">
        `rule`,
      </if>
      <if test="modifyTime != null">
        `modify_time`,
      </if>
      <if test="modifyBy != null">
        `modify_by`
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=LONGVARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=LONGVARCHAR},
      </if>
      <if test="lastestTime != null">
        #{lastestTime,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=LONGVARCHAR},
      </if>
      <if test="deletedTime != null">
        #{deletedTime,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=LONGVARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="rule != null">
        #{rule,jdbcType=LONGVARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=LONGVARCHAR}
      </if>
    </trim>
  </insert>
  <select id="countByEntity" parameterType="com.shadowkhan.dao.user.model.UserEntity" resultType="java.lang.Integer">
    select count(*) from `user`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </select>
  <update id="updateByEntitySelective" parameterType="map">
    update `user`
    <set>
        `User_ID` = #{record.userId,jdbcType=INTEGER},
        `username` = #{record.username,jdbcType=LONGVARCHAR},
        `password` = #{record.password,jdbcType=LONGVARCHAR},
        `create_time` = #{record.createTime,jdbcType=BIGINT},
        `create_by` = #{record.createBy,jdbcType=LONGVARCHAR},
        `lastest_time` = #{record.lastestTime,jdbcType=BIGINT},
        `is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
        `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=LONGVARCHAR},
        `phone` = #{record.phone,jdbcType=LONGVARCHAR},
        `email` = #{record.email,jdbcType=LONGVARCHAR},
        `rule` = #{record.rule,jdbcType=LONGVARCHAR},
        `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
        `modify_by` = #{record.modify,jdbcType=LONGVARCHAR}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByEntity" parameterType="map">
    update `user`
    set
    `User_ID` = #{record.userId,jdbcType=INTEGER},
    `username` = #{record.username,jdbcType=LONGVARCHAR},
    `password` = #{record.password,jdbcType=LONGVARCHAR},
    `create_time` = #{record.createTime,jdbcType=BIGINT},
    `create_by` = #{record.createBy,jdbcType=LONGVARCHAR},
    `lastest_time` = #{record.lastestTime,jdbcType=BIGINT},
    `is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
    `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
    `name` = #{record.name,jdbcType=LONGVARCHAR},
    `phone` = #{record.phone,jdbcType=LONGVARCHAR},
    `email` = #{record.email,jdbcType=LONGVARCHAR},
    `rule` = #{record.rule,jdbcType=LONGVARCHAR},
    `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
    `modify_by` = #{record.modify,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadowkhan.dao.user.model.User">
    update `user`
    <set>
      <if test="userId != null">
        `User_ID`=#{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        `username`=#{username,jdbcType=LONGVARCHAR},
      </if>
      <if test="password != null">
        `password`=#{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        `create_time`=#{createTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        `create_by`=#{createBy,jdbcType=LONGVARCHAR},
      </if>
      <if test="lastestTime != null">
        `lastest_time`=#{lastestTime,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        `is_deleted`=#{isDeleted,jdbcType=LONGVARCHAR},
      </if>
      <if test="deletedTime != null">
        `deleted_time`=#{deletedTime,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name`=#{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="phone != null">
        `phone`=#{phone,jdbcType=LONGVARCHAR},
      </if>
      <if test="email != null">
        `email`=#{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="rule != null">
        `rule`=#{rule,jdbcType=LONGVARCHAR},
      </if>
      <if test="modifyTime != null">
      `modify_time`=#{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="modifyBy != null">
      `modify_by`=#{modifyBy,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadowkhan.dao.user.model.User">
    update `user`
    set
    `User_ID` = #{record.userId,jdbcType=INTEGER},
    `username` = #{record.username,jdbcType=LONGVARCHAR},
    `password` = #{record.password,jdbcType=LONGVARCHAR},
    `create_time` = #{record.createTime,jdbcType=BIGINT},
    `create_by` = #{record.createBy,jdbcType=LONGVARCHAR},
    `lastest_time` = #{record.lastestTime,jdbcType=BIGINT},
    `is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
    `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
    `name` = #{record.name,jdbcType=LONGVARCHAR},
    `phone` = #{record.phone,jdbcType=LONGVARCHAR},
    `email` = #{record.email,jdbcType=LONGVARCHAR},
    `rule` = #{record.rule,jdbcType=LONGVARCHAR},
    `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
    `modify_by` = #{record.modifyBy,jdbcType=LONGVARCHAR}
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </update>

</mapper>

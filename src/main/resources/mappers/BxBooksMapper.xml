<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shadowkhan.dao.bxBooks.BxBooksMapper">

  <resultMap id="BaseResultMap" type="com.shadowkhan.dao.bxBooks.model.BxBooks">
    <id column="ISBN" jdbcType="LONGVARCHAR" property="isbn"/>
    <result column="Book_Title" jdbcType="LONGVARCHAR" property="bookTitle"/>
    <result column="Book_Author" jdbcType="LONGVARCHAR" property="bookAuthor"/>
    <result column="Year_Of_Publication" jdbcType="INTEGER" property="yearOfPublication"/>
    <result column="Publisher" jdbcType="LONGVARCHAR" property="publisher"/>
    <result column="Image_URL_S" jdbcType="LONGVARCHAR" property="imageUrlS"/>
    <result column="Image_URL_M" jdbcType="LONGVARCHAR" property="imageUrlM"/>
    <result column="Image_URL_L" jdbcType="LONGVARCHAR" property="imageUrlL"/>
    <result column="is_deleted" jdbcType="LONGVARCHAR" property="isDeleted"/>
    <result column="deleted_time" jdbcType="BIGINT" property="deletedTime"/>
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
    <result column="modify_by" jdbcType="LONGVARCHAR" property="modifyBy"/>
    <result column="create_time" jdbcType="BIGINT" property="createTime"/>
    <result column="create_by" jdbcType="LONGVARCHAR" property="createBy"/>
  </resultMap>
  <sql id="Entity_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Entity_Where_Clause">
    <where>
      <foreach collection="entity.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `ISBN`, `Book_Title`, `Book_Author`, `Year_Of_Publication`, `Publisher`, `Image_URL_S`, `Image_URL_M`, `Image_URL_L`,`is_deleted`,`deleted_time`,`modify_time`,`modify_by`,`create_time`,`create_by`
  </sql>
  <select id="selectByEntity" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooksEntity" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `BX_Books`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByKeys" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `BX_Books`
    where 1=1
    and `is_deleted` = '0'
    and concat(ifnull(`Book_Title`,''),ifnull(`Book_Author`,''),ifnull(`Year_Of_Publication`,''),ifnull(`Publisher`,'')) like concat('%',#{keywords},'%')
  </select>
  <select id="selectAll" parameterType="hashmap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `BX_Books`
    where 1=1
    <if test="isDeleted != null">
      and `is_deleted` = #{isDeleted}
    </if>
    <if test="first != null or second != null">
      limit #{first},#{second}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `BX_Books`
    where `ISBN` = #{isbn,jdbcType=LONGVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from `BX_Books`
    where `ISBN` = #{isbn,jdbcType=LONGVARCHAR}
  </delete>
  <delete id="deleteByEntity" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooksEntity">
    delete from `BX_Books`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooks">
    insert into `BX_Books` (
      `ISBN`,
      `Book_Title`,
      `Book_Author`,
      `Year_Of_Publication`,
      `Publisher`,
      `Image_URL_S`,
      `Image_URL_M`,
      `Image_URL_L`,
      `is_deleted`,
      `deleted_time`,
      `modify_time`,
      `modify_by`,
      `create_time`,
      `create_by`
    )
    values (
      #{isbn,jdbcType=LONGVARCHAR},
      #{bookTitle,jdbcType=LONGVARCHAR},
      #{bookAuthor,jdbcType=LONGVARCHAR},
      #{yearOfPublication,jdbcType=INTEGER},
      #{publisher,jdbcType=LONGVARCHAR},
      #{imageUrlS,jdbcType=LONGVARCHAR},
      #{imageUrlM,jdbcType=LONGVARCHAR},
      #{imageUrlL,jdbcType=LONGVARCHAR},
      #{isDeleted,jdbcType=LONGVARCHAR},
      #{deletedTime,jdbcType=BIGINT},
      #{modifyTime,jdbcType=BIGINT},
      #{modifyBy,jdbcType=LONGVARCHAR},
      #{createTime,jdbcType=BIGINT},
      #{createBy,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooks">
    insert into `BX_Books`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        `ISBN`,
      </if>
      <if test="bookTitle != null">
        `Book_Title`,
      </if>
      <if test="bookAuthor != null">
        `Book_Author`,
      </if>
      <if test="yearOfPublication != null">
        `Year_Of_Publication`,
      </if>
      <if test="publisher != null">
        `Publisher`,
      </if>
      <if test="imageUrlS != null">
        `Image_URL_S`,
      </if>
      <if test="imageUrlM != null">
        `Image_URL_M`,
      </if>
      <if test="imageUrlL != null">
        `Image_URL_L`,
      </if>
      <if test="isDeleted != null">
        `is_deleted`,
      </if>
      <if test="deletedTime != null">
        `deleted_time`,
      </if>
      <if test="modifyTime != null">
        `modify_time`,
      </if>
      <if test="modifyBy != null">
        `modify_by`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="createBy != null">
        `create_by`
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        #{isbn,jdbcType=LONGVARCHAR},
      </if>
      <if test="bookTitle != null">
        #{bookTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=LONGVARCHAR},
      </if>
      <if test="yearOfPublication != null">
        #{yearOfPublication,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=LONGVARCHAR},
      </if>
      <if test="imageUrlS != null">
        #{imageUrlS,jdbcType=LONGVARCHAR},
      </if>
      <if test="imageUrlM != null">
        #{imageUrlM,jdbcType=LONGVARCHAR},
      </if>
      <if test="imageUrlL != null">
        #{imageUrlL,jdbcType=LONGVARCHAR},
      </if>
      <if test="isDeleted != null">
        #{idDeleted,jdbcType=LONGVARCHAR},
      </if>
      <if test="deletedTime != null">
        #{deletedTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=LONGVARCHAR}
      </if>
    </trim>
  </insert>
  <select id="countByEntity" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooksEntity" resultType="java.lang.Integer">
    select count(*) from `BX_Books`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </select>
  <update id="updateByEntitySelective" parameterType="map">
    update `BX_Books`
    <set>
        `ISBN` = #{record.isbn,jdbcType=LONGVARCHAR},
        `Book_Title` = #{record.bookTitle,jdbcType=LONGVARCHAR},
        `Book_Author` = #{record.bookAuthor,jdbcType=LONGVARCHAR},
        `Year_Of_Publication` = #{record.yearOfPublication,jdbcType=INTEGER},
        `Publisher` = #{record.publisher,jdbcType=LONGVARCHAR},
        `Image_URL_S` = #{record.imageUrlS,jdbcType=LONGVARCHAR},
        `Image_URL_M` = #{record.imageUrlM,jdbcType=LONGVARCHAR},
        `Image_URL_L` = #{record.imageUrlL,jdbcType=LONGVARCHAR},
        `is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
        `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
        `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
        `modify_by` = #{record.modify,jdbcType=LONGVARCHAR},
        `create_time` = #{record.createTime,jdbcType=BIGINT},
        `create_by` = #{record.createBy,jdbcType=LONGVARCHAR}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByEntity" parameterType="map">
    update `BX_Books`
    set `ISBN` = #{record.isbn,jdbcType=LONGVARCHAR},
`Book_Title` = #{record.bookTitle,jdbcType=LONGVARCHAR},
`Book_Author` = #{record.bookAuthor,jdbcType=LONGVARCHAR},
`Year_Of_Publication` = #{record.yearOfPublication,jdbcType=INTEGER},
`Publisher` = #{record.publisher,jdbcType=LONGVARCHAR},
`Image_URL_S` = #{record.imageUrlS,jdbcType=LONGVARCHAR},
`Image_URL_M` = #{record.imageUrlM,jdbcType=LONGVARCHAR},
`Image_URL_L` = #{record.imageUrlL,jdbcType=LONGVARCHAR},
`is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
    `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
    `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
    `modify_by` = #{record.modify,jdbcType=LONGVARCHAR},
    `create_time` = #{record.createTime,jdbcType=BIGINT},
    `create_by` = #{record.createBy,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooks">
    update `BX_Books`
    <set>
        <if test="isbn != null">
          `ISBN` = #{isbn,jdbcType=LONGVARCHAR},
        </if>
        <if test="bookTitle != null">
          `Book_Title` = #{bookTitle,jdbcType=LONGVARCHAR},
        </if>
        <if test="bookAuthor != null">
          `Book_Author` = #{bookAuthor,jdbcType=LONGVARCHAR},
        </if>
        <if test="yearOfPublication != null">
          `Year_Of_Publication` = #{yearOfPublication,jdbcType=INTEGER},
        </if>
        <if test="publisher != null">
          `Publisher` = #{publisher,jdbcType=LONGVARCHAR},
        </if>
        <if test="imageUrlS != null">
          `Image_URL_S` = #{imageUrlS,jdbcType=LONGVARCHAR},
        </if>
        <if test="imageUrlM != null">
          `Image_URL_M` = #{imageUrlM,jdbcType=LONGVARCHAR},
        </if>
        <if test="imageUrlL != null">
          `Image_URL_L` = #{imageUrlL,jdbcType=LONGVARCHAR},
        </if>
        <if test="isDeleted != null">
            `is_deleted`=#{isDeleted,jdbcType=LONGVARCHAR},
        </if>
      <if test="deletedTime != null">
        `deleted_time`=#{deletedTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        `modify_time`=#{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="modifyBy != null">
        `modify_by`=#{modifyBy,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        `create_time`=#{createTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        `create_by`=#{createBy,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `ISBN` = #{isbn,jdbcType=LONGVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadowkhan.dao.bxBooks.model.BxBooks">
    update `BX_Books`
    set
        `ISBN` = #{isbn,jdbcType=LONGVARCHAR},
        `Book_Title` = #{bookTitle,jdbcType=LONGVARCHAR},
        `Book_Author` = #{bookAuthor,jdbcType=LONGVARCHAR},
        `Year_Of_Publication` = #{yearOfPublication,jdbcType=INTEGER},
        `Publisher` = #{publisher,jdbcType=LONGVARCHAR},
        `Image_URL_S` = #{imageUrlS,jdbcType=LONGVARCHAR},
        `Image_URL_M` = #{imageUrlM,jdbcType=LONGVARCHAR},
        `Image_URL_L` = #{imageUrlL,jdbcType=LONGVARCHAR},
        `is_deleted` = #{record.isDeleted,jdbcType=LONGVARCHAR},
        `deleted_time` = #{record.deletedTime,jdbcType=BIGINT},
        `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
        `modify_by` = #{record.modifyBy,jdbcType=LONGVARCHAR},
        `create_time` = #{record.createTime,jdbcType=BIGINT},
        `create_by` = #{record.createBy,jdbcType=LONGVARCHAR}
    where `ISBN` = #{isbn,jdbcType=LONGVARCHAR}
  </update>
</mapper>

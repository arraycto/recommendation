<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shadowkhan.dao.bxBookRatings.BxBookRatingsMapper">

  <resultMap id="BaseResultMap" type="com.shadowkhan.dao.bxBookRatings.model.BxBookRatings">
    <id column="User_ID" jdbcType="INTEGER" property="userId"/>
    <result column="ISBN" jdbcType="LONGVARCHAR" property="isbn"/>
    <result column="Book_Rating" jdbcType="INTEGER" property="bookRating"/>
  </resultMap>
  <sql id="Entity_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Entity_Where_Clause">
    <where>
      <foreach collection="entity.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `User_ID`, `ISBN`, `Book_Rating`
  </sql>
  <select id="selectByEntity" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatingsEntity" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `BX_Book_Ratings`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `BX_Book_Ratings`
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `BX_Book_Ratings`
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByEntity" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatingsEntity">
    delete from `BX_Book_Ratings`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatings">
    insert into `BX_Book_Ratings` (
      `User_ID`, 
      `ISBN`, 
      `Book_Rating`
    )
    values (
      #{userId,jdbcType=INTEGER}, 
      #{isbn,jdbcType=LONGVARCHAR}, 
      #{bookRating,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatings">
    insert into `BX_Book_Ratings`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        `User_ID`,
      </if>
      <if test="isbn != null">
        `ISBN`,
      </if>
      <if test="bookRating != null">
        `Book_Rating`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=LONGVARCHAR},
      </if>
      <if test="bookRating != null">
        #{bookRating,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByEntity" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatingsEntity" resultType="java.lang.Integer">
    select count(*) from `BX_Book_Ratings`
    <if test="_parameter != null">
      <include refid="Entity_Where_Clause"/>
    </if>
  </select>
  <update id="updateByEntitySelective" parameterType="map">
    update `BX_Book_Ratings`
    <set>
        `User_ID` = #{record.userId,jdbcType=INTEGER},
        `ISBN` = #{record.isbn,jdbcType=LONGVARCHAR},
        `Book_Rating` = #{record.bookRating,jdbcType=INTEGER},
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByEntity" parameterType="map">
    update `BX_Book_Ratings`
    set `User_ID` = #{record.userId,jdbcType=INTEGER}, 
`ISBN` = #{record.isbn,jdbcType=LONGVARCHAR}, 
`Book_Rating` = #{record.bookRating,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Entity_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatings">
    update `BX_Book_Ratings`
    <set>
        <if test="userId != null">
          `User_ID` = #{userId,jdbcType=INTEGER},
        </if>
        <if test="isbn != null">
          `ISBN` = #{isbn,jdbcType=LONGVARCHAR},
        </if>
        <if test="bookRating != null">
          `Book_Rating` = #{bookRating,jdbcType=INTEGER},
        </if>
    </set>
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadowkhan.dao.bxBookRatings.model.BxBookRatings">
    update `BX_Book_Ratings`
    set
        `User_ID` = #{userId,jdbcType=INTEGER}, 
        `ISBN` = #{isbn,jdbcType=LONGVARCHAR}, 
        `Book_Rating` = #{bookRating,jdbcType=INTEGER}
    where `User_ID` = #{userId,jdbcType=INTEGER}
  </update>
</mapper>